/*
 * Copyright (c) 2009-2012 Xilinx, Inc.  All rights reserved.
 *
 * Xilinx, Inc.
 * XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION "AS IS" AS A
 * COURTESY TO YOU.  BY PROVIDING THIS DESIGN, CODE, OR INFORMATION AS
 * ONE POSSIBLE   IMPLEMENTATION OF THIS FEATURE, APPLICATION OR
 * STANDARD, XILINX IS MAKING NO REPRESENTATION THAT THIS IMPLEMENTATION
 * IS FREE FROM ANY CLAIMS OF INFRINGEMENT, AND YOU ARE RESPONSIBLE
 * FOR OBTAINING ANY RIGHTS YOU MAY REQUIRE FOR YOUR IMPLEMENTATION.
 * XILINX EXPRESSLY DISCLAIMS ANY WARRANTY WHATSOEVER WITH RESPECT TO
 * THE ADEQUACY OF THE IMPLEMENTATION, INCLUDING BUT NOT LIMITED TO
 * ANY WARRANTIES OR REPRESENTATIONS THAT THIS IMPLEMENTATION IS FREE
 * FROM CLAIMS OF INFRINGEMENT, IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE.
 *
 */

/*
 * helloworld.c: simple test application
 *
 * This application configures UART 16550 to baud rate 9600.
 * PS7 UART (Zynq) is not initialized by this application, since
 * bootrom/bsp configures it to baud rate 115200
 *
 * ------------------------------------------------
 * | UART TYPE   BAUD RATE                        |
 * ------------------------------------------------
 *   uartns550   9600
 *   uartlite    Configurable only in HW design
 *   ps7_uart    115200 (configured by bootrom/bsp)
 */

#include <stdbool.h>
#include <stdio.h>
#include "platform.h"
#include <stdint.h>

void print(char *str);

int main()
{
    init_platform();
    setbuf(stdout, NULL);

    char a;

    print("Please type the operation: ");

    bool first_num_complete = false;
    uint32_t first_num_digits = 0;
    uint32_t first_num = 0;

    while (!first_num_complete) {
    	a = getchar();
    	if (a == '/' && first_num_digits > 0) {
    		first_num_complete = true;
    	}
    	else if (a >= '0'  && a <= '9') {
    		print("\n\rThat is a valid number");
    		first_num  = first_num * 10 + (uint32_t)(a - '0');
    		printf('\n\r%d', first_num);
    		first_num_digits++;
    	}
    	else {
    		print("\n\rThat was not a valid character.");
    		//return 1;
    	}
    	printf("\n\r%c", a);
    }

    printf('%d\n', 100);
    print("\nDone!");

    return 0;

    /*
    char a[16] = "deadbeefdeadbee";
    a[15] = '\0';

    printf("%s\n\r", a);
    char first_char = getchar();
    scanf("%s", a);
    fgets(a, sizeof(a) - sizeof(a[0]), stdin);


    printf("%c%s\n\r", first_char, a);
    */

    /*
    while(1) {
    	printf("Type a string: ");

    	char a[32] = {0x0};
    	//scanf("%s", a);

    	int index_pos = 0;

    	while(a[index_pos] != '\n' && index_pos < 31) {
    		a[index_pos] = getchar();
    		printf("%c",a[index_pos]);
    	}
    	print("\n\r");
    }
    */

    /*
    while(1) {
    	printf("Type a string: \n\r");

    	char a[256] = {0x0};
    	fgets(a, sizeof(a), stdin);

    	printf("You typed: %s\n\r", a);
    }
    */

    return 0;
}
